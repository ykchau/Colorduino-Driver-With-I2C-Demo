/*
	Project  : LaLiMat project (https://www.youtube.com/playlist?list=PLJBKmE2nNweRXOebZjydkMEiq2pHtBMOS in Chinese)
   	file     : font.h
	Author   : ykchau
 	youtube  : youtube.com/ykchau888
  	Licenese : GPL-3.0
   	Please let me know if you use it commercial project.
*/

const byte letters[95][8] PROGMEM = { //  10 + 26 + 26 + 26 + 2 + 5 = 95, small size 5x4, except special letter ( Last 8 )
  {0xf8, 0x88, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #0, 0
  {0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #1, 1
  {0xe8, 0xa8, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #2, 2
  {0xa8, 0xa8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #3, 3
  {0x38, 0x20, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #4, 4
  {0xb8, 0xa8, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #5, 5
  {0xf8, 0xa8, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #6, 6
  {0x08, 0x08, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #7, 7
  {0xf8, 0xa8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #8, 8
  {0xb8, 0xa8, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #9, 9
  {0xf8, 0x28, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #10, A
  {0xf8, 0xa8, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #11, B
  {0x70, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00}, // #12, C
  {0xf8, 0x88, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, // #13, D
  {0xf8, 0xa8, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #14, E
  {0xf8, 0x28, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00}, // #15, F
  {0xf8, 0x88, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #16, G
  {0xf8, 0x20, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #17, H
  {0x88, 0xf8, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00}, // #18, I
  {0x48, 0x88, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #19, J
  {0xf8, 0x20, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #20, K
  {0xf8, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00}, // #21, L
  {0xf8, 0x10, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #22, M
  {0xf0, 0x20, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00}, // #23, N
  {0x70, 0x88, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, // #24, O
  {0xf8, 0x28, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00}, // #25, P
  {0x78, 0x48, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #26, Q
  {0xf8, 0x28, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #27, R
  {0x90, 0xa8, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00}, // #28, S
  {0x08, 0xf8, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00}, // #29, T
  {0xf8, 0x80, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #30, U
  {0xf8, 0x40, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00}, // #31, V
  {0xf8, 0x40, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #32, W
  {0xd8, 0x20, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #33, X
  {0x38, 0xc0, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00}, // #34, Y
  {0xc8, 0xa8, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00}, // #35, Z
  {0x68, 0xa8, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #36, a
  {0xf8, 0xa0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #37, b
  {0x60, 0x90, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00}, // #38, c
  {0xe0, 0xa0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #39, d
  {0x70, 0xa8, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #40, e
  {0x20, 0xf8, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00}, // #41, f
  {0x30, 0xa8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, // #42, g
  {0xf8, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #43, h
  {0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00}, // #44, i
  {0x40, 0x80, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00}, // #45, j
  {0xf8, 0x40, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #46, k
  {0x00, 0x78, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00}, // #47, l
  {0xf0, 0x20, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #48, m
  {0xe0, 0x20, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #49, n
  {0xe0, 0xa0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #50, o
  {0xf0, 0x50, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00}, // #51, p
  {0x20, 0x50, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #52, q
  {0xe0, 0x20, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00}, // #53, r
  {0xa0, 0x90, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00}, // #54, s
  {0x20, 0xf0, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #55, t
  {0x60, 0x80, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #56, u
  {0xe0, 0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00}, // #57, v
  {0xf0, 0x40, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #58, w
  {0xa0, 0x40, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #59, x
  {0x18, 0xa0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00}, // #60, y
  {0x90, 0xd0, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #61, z
  {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #62, ' '
  {0xc8, 0x20, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00}, // #63, %
  {0x30, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00}, // #64, ^
  {0x00, 0x70, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00}, // #65, (
  {0x00, 0x88, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00}, // #66, )
  {0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #67, `
  {0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00}, // #68, -
  {0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00}, // #69, _
  {0x50, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00}, // #70, =
  {0x20, 0x70, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00}, // #71, +
  {0x20, 0xf8, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00}, // #72, {
  {0x88, 0xf8, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00}, // #73, }
  {0xf8, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #74, [
  {0x88, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #75, ]
  {0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #76, |
  {0x18, 0x70, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00}, // #77, stroke
  {0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #78, :
  {0x00, 0x80, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00}, // #79, ;
  {0x20, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #80, '
  {0x00, 0x20, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00}, // #81, <
  {0xa0, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #82, ,
  {0x00, 0x50, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00}, // #83, >
  {0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #84, .
  {0x0c, 0xa4, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00}, // #85, ?
  {0xc0, 0x70, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00}, // #86, /
  {0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // #87, !
  {0x70, 0x88, 0xa8, 0x30, 0x00, 0x00, 0x00, 0x00}, // #88, @
  {0x00, 0x18, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00}, // #89, "
  {0x50, 0xf8, 0x50, 0xf8, 0x50, 0x00, 0x00, 0x00}, // #90, #
  {0x48, 0x54, 0xfe, 0x54, 0x24, 0x00, 0x00, 0x00}, // #91, $
  {0x68, 0x94, 0xb4, 0x48, 0xa0, 0x00, 0x00, 0x00}, // #92, &
  {0xa8, 0x70, 0xf8, 0x70, 0xa8, 0x00, 0x00, 0x00}, // #93, *
  {0x20, 0x10, 0x20, 0x40, 0x20, 0x00, 0x00, 0x00} // #94, ~
};

byte getLetter(char letter) {
  byte pos = 0;
  switch (letter) {
    case '0' : pos = 0; break;
    case '1' : pos = 1; break;
    case '2' : pos = 2; break;
    case '3' : pos = 3; break;
    case '4' : pos = 4; break;
    case '5' : pos = 5; break;
    case '6' : pos = 6; break;
    case '7' : pos = 7; break;
    case '8' : pos = 8; break;
    case '9' : pos = 9; break;
    case 'A' : pos = 10; break;
    case 'B' : pos = 11; break;
    case 'C' : pos = 12; break;
    case 'D' : pos = 13; break;
    case 'E' : pos = 14; break;
    case 'F' : pos = 15; break;
    case 'G' : pos = 16; break;
    case 'H' : pos = 17; break;
    case 'I' : pos = 18; break;
    case 'J' : pos = 19; break;
    case 'K' : pos = 20; break;
    case 'L' : pos = 21; break;
    case 'M' : pos = 22; break;
    case 'N' : pos = 23; break;
    case 'O' : pos = 24; break;
    case 'P' : pos = 25; break;
    case 'Q' : pos = 26; break;
    case 'R' : pos = 27; break;
    case 'S' : pos = 28; break;
    case 'T' : pos = 29; break;
    case 'U' : pos = 30; break;
    case 'V' : pos = 31; break;
    case 'W' : pos = 32; break;
    case 'X' : pos = 33; break;
    case 'Y' : pos = 34; break;
    case 'Z' : pos = 35; break;
    case 'a' : pos = 36; break;
    case 'b' : pos = 37; break;
    case 'c' : pos = 38; break;
    case 'd' : pos = 39; break;
    case 'e' : pos = 40; break;
    case 'f' : pos = 41; break;
    case 'g' : pos = 42; break;
    case 'h' : pos = 43; break;
    case 'i' : pos = 44; break;
    case 'j' : pos = 45; break;
    case 'k' : pos = 46; break;
    case 'l' : pos = 47; break;
    case 'm' : pos = 48; break;
    case 'n' : pos = 49; break;
    case 'o' : pos = 50; break;
    case 'p' : pos = 51; break;
    case 'q' : pos = 52; break;
    case 'r' : pos = 53; break;
    case 's' : pos = 54; break;
    case 't' : pos = 55; break;
    case 'u' : pos = 56; break;
    case 'v' : pos = 57; break;
    case 'w' : pos = 58; break;
    case 'x' : pos = 59; break;
    case 'y' : pos = 60; break;
    case 'z' : pos = 61; break;
    case ' ' : pos = 62; break;
    case '%' : pos = 63; break;
    case '^' : pos = 64; break;
    case '(' : pos = 65; break;
    case ')' : pos = 66; break;
    case '`' : pos = 67; break;
    case '-' : pos = 68; break;
    case '_' : pos = 69; break;
    case '=' : pos = 70; break;
    case '+' : pos = 71; break;
    case '{' : pos = 72; break;
    case '}' : pos = 73; break;
    case '[' : pos = 74; break;
    case ']' : pos = 75; break;
    case '|' : pos = 76; break;
    case '\\' : pos = 77; break;
    case ':' : pos = 78; break;
    case ';' : pos = 79; break;
    case '\'' : pos = 80; break;
    case '<' : pos = 81; break;
    case ',' : pos = 82; break;
    case '>' : pos = 83; break;
    case '.' : pos = 84; break;
    case '?' : pos = 85; break;
    case '\/' : pos = 86; break;
    case '!' : pos = 87; break;
    case '@' : pos = 88; break;
    case '"' : pos = 89; break;
    case '#' : pos = 90; break;
    case '$' : pos = 91; break;
    case '&' : pos = 92; break;
    case '*' : pos = 93; break;
    case '~' : pos = 94; break;
    default:
      pos = 62; break;
  }
  return pos;
};

/*
const byte fonts[91][8] PROGMEM = { // Full Size 8x8
  { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
  { 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00 },   // !
  { 0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00 },   // "
  { 0x00, 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14, 0x00 },   // #
  { 0x00, 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12, 0x00 },   // $
  { 0x00, 0x00, 0x62, 0x64, 0x08, 0x13, 0x23, 0x00 },   // %
  { 0x00, 0x00, 0x36, 0x49, 0x55, 0x22, 0x50, 0x00 },   // &
  { 0x00, 0x00, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00 },   // '
  { 0x00, 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00, 0x00 },   // (
  { 0x00, 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00, 0x00 },   // )
  { 0x00, 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14, 0x00 },   // *
  { 0x00, 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00 },   // +
  { 0x00, 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00, 0x00 },   // ,
  { 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00 },   // -
  { 0x00, 0x00, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00 },   // .
  { 0x00, 0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00 },   // /
  { 0x00, 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00 },   // 0
  { 0x00, 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00, 0x00 },   // 1
  { 0x00, 0x00, 0x42, 0x61, 0x51, 0x49, 0x46, 0x00 },   // 2
  { 0x00, 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31, 0x00 },   // 3
  { 0x00, 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10, 0x00 },   // 4
  { 0x00, 0x00, 0x27, 0x45, 0x45, 0x45, 0x39, 0x00 },   // 5
  { 0x00, 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00 },   // 6
  { 0x00, 0x00, 0x01, 0x71, 0x09, 0x05, 0x03, 0x00 },   // 7
  { 0x00, 0x00, 0x36, 0x49, 0x49, 0x49, 0x36, 0x00 },   // 8
  { 0x00, 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E, 0x00 },   // 9
  { 0x00, 0x00, 0x00, 0x36, 0x36, 0x00, 0x00, 0x00 },   // :
  { 0x00, 0x00, 0x00, 0x56, 0x36, 0x00, 0x00, 0x00 },   // ;
  { 0x00, 0x00, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00 },   // <
  { 0x00, 0x00, 0x14, 0x14, 0x14, 0x14, 0x14, 0x00 },   // =
  { 0x00, 0x00, 0x00, 0x41, 0x22, 0x14, 0x08, 0x00 },   // >
  { 0x00, 0x00, 0x02, 0x01, 0x51, 0x09, 0x06, 0x00 },   // ?
  { 0x00, 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E, 0x00 },   // @
  { 0x00, 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C, 0x00 },   // A
  { 0x00, 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36, 0x00 },   // B
  { 0x00, 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22, 0x00 },   // C
  { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C, 0x00 },   // D
  { 0x00, 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41, 0x00 },   // E
  { 0x00, 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01, 0x00 },   // F
  { 0x00, 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A, 0x00 },   // G
  { 0x00, 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00 },   // H
  { 0x00, 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00, 0x00 },   // I
  { 0x00, 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01, 0x00 },   // J
  { 0x00, 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41, 0x00 },   // K
  { 0x00, 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40, 0x00 },   // L
  { 0x00, 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F, 0x00 },   // M
  { 0x00, 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F, 0x00 },   // N
  { 0x00, 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00 },   // O
  { 0x00, 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06, 0x00 },   // P
  { 0x00, 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00 },   // Q
  { 0x00, 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46, 0x00 },   // R
  { 0x00, 0x00, 0x46, 0x49, 0x49, 0x49, 0x31, 0x00 },   // S
  { 0x00, 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01, 0x00 },   // T
  { 0x00, 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00 },   // U
  { 0x00, 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00 },   // V
  { 0x00, 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F, 0x00 },   // W
  { 0x00, 0x00, 0x63, 0x14, 0x08, 0x14, 0x63, 0x00 },   // X
  { 0x00, 0x00, 0x07, 0x08, 0x70, 0x08, 0x07, 0x00 },   // Y
  { 0x00, 0x00, 0x61, 0x51, 0x49, 0x45, 0x43, 0x00 },   // Z
  { 0x00, 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00, 0x00 },   // [
  //{ 0x00, 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55, 0x00 },   // 55
  { 0xFE, 0x22, 0x55, 0xAA, 0x55, 0x22, 0x55, 0xDF },   // |
  { 0x00, 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00, 0x00 },   // ]
  { 0x00, 0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00 },   // ^
  { 0x00, 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00 },   // _
  { 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x00, 0x00 },   // '
  { 0x00, 0x00, 0x20, 0x54, 0x54, 0x54, 0x78, 0x00 },   // a
  { 0x00, 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38, 0x00 },   // b
  { 0x00, 0x00, 0x38, 0x44, 0x44, 0x44, 0x20, 0x00 },   // c
  { 0x00, 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F, 0x00 },   // d
  { 0x00, 0x00, 0x38, 0x54, 0x54, 0x54, 0x18, 0x00 },   // e
  { 0x00, 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02, 0x00 },   // f
  { 0x00, 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C, 0x00 },   // g
  { 0x00, 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78, 0x00 },   // h
  { 0x00, 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00, 0x00 },   // i
  { 0x00, 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00, 0x00 },   // j
  { 0x00, 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00, 0x00 },   // k
  { 0x00, 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00, 0x00 },   // l
  { 0x00, 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78, 0x00 },   // m
  { 0x00, 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78, 0x00 },   // n
  { 0x00, 0x00, 0x38, 0x44, 0x44, 0x44, 0x38, 0x00 },   // o
  { 0x00, 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18, 0x00 },   // p
  { 0x00, 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC, 0x00 },   // q
  { 0x00, 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08, 0x00 },   // r
  { 0x00, 0x00, 0x48, 0x54, 0x54, 0x54, 0x20, 0x00 },   // s
  { 0x00, 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20, 0x00 },   // t
  { 0x00, 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C, 0x00 },   // u
  { 0x00, 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00 },   // v
  { 0x00, 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00 },   // w
  { 0x00, 0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00 },   // x
  { 0x00, 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C, 0x00 },   // y
  { 0x00, 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44, 0x00 }   // z
};



byte get8x8Letter(char letter) {
  byte pos = 0;
  switch (letter) {
    case ' ' : pos = 0; break;
    case '!' : pos = 1; break;
    case '"' : pos = 2; break;
    case '#' : pos = 3; break;
    case '$' : pos = 4; break;
    case '%' : pos = 5; break;
    case '&' : pos = 6; break;
    case '\'' : pos = 7; break;
    case '(' : pos = 8; break;
    case ')' : pos = 9; break;
    case '*' : pos = 10; break;
    case '+' : pos = 11; break;
    case ',' : pos = 12; break;
    case '-' : pos = 13; break;
    case '.' : pos = 14; break;
    case '/' : pos = 15; break;
    case '0' : pos = 16; break;
    case '1' : pos = 17; break;
    case '2' : pos = 18; break;
    case '3' : pos = 19; break;
    case '4' : pos = 20; break;
    case '5' : pos = 21; break;
    case '6' : pos = 22; break;
    case '7' : pos = 23; break;
    case '8' : pos = 24; break;
    case '9' : pos = 25; break;
    case ':' : pos = 26; break;
    case ';' : pos = 27; break;
    case '<' : pos = 28; break;
    case '=' : pos = 29; break;
    case '>' : pos = 30; break;
    case '?' : pos = 31; break;
    case '@' : pos = 32; break;
    case 'A' : pos = 33; break;
    case 'B' : pos = 34; break;
    case 'C' : pos = 35; break;
    case 'D' : pos = 36; break;
    case 'E' : pos = 37; break;
    case 'F' : pos = 38; break;
    case 'G' : pos = 39; break;
    case 'H' : pos = 40; break;
    case 'I' : pos = 41; break;
    case 'J' : pos = 42; break;
    case 'K' : pos = 43; break;
    case 'L' : pos = 44; break;
    case 'M' : pos = 45; break;
    case 'N' : pos = 46; break;
    case 'O' : pos = 47; break;
    case 'P' : pos = 48; break;
    case 'Q' : pos = 49; break;
    case 'R' : pos = 50; break;
    case 'S' : pos = 51; break;
    case 'T' : pos = 52; break;
    case 'U' : pos = 53; break;
    case 'V' : pos = 54; break;
    case 'W' : pos = 55; break;
    case 'X' : pos = 56; break;
    case 'Y' : pos = 57; break;
    case 'Z' : pos = 58; break;
    case '[' : pos = 59; break;
    case '|' : pos = 60; break;
    case ']' : pos = 61; break;
    case '^' : pos = 62; break;
    case '_' : pos = 63; break;
    case '`' : pos = 64; break;
    case 'a' : pos = 65; break;
    case 'b' : pos = 66; break;
    case 'c' : pos = 67; break;
    case 'd' : pos = 68; break;
    case 'e' : pos = 69; break;
    case 'f' : pos = 70; break;
    case 'g' : pos = 71; break;
    case 'h' : pos = 72; break;
    case 'i' : pos = 73; break;
    case 'j' : pos = 74; break;
    case 'k' : pos = 75; break;
    case 'l' : pos = 76; break;
    case 'm' : pos = 77; break;
    case 'n' : pos = 78; break;
    case 'o' : pos = 79; break;
    case 'p' : pos = 80; break;
    case 'q' : pos = 81; break;
    case 'r' : pos = 82; break;
    case 's' : pos = 83; break;
    case 't' : pos = 84; break;
    case 'u' : pos = 85; break;
    case 'v' : pos = 86; break;
    case 'w' : pos = 87; break;
    case 'x' : pos = 88; break;
    case 'y' : pos = 89; break;
    case 'z' : pos = 90; break;
    default:
      pos = 0; break;
  }
  return pos;
}*/
